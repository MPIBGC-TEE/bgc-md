
model:
    - state_variables:
        - C_il:
        - C_is: 

    - additional_variables:
        - t:
            desc: time
            unit: "day"
            type: variable
            key: time_symbol

    - components:
        # you are required to provide at least expressions for f u x and A
        # you are allowed to use as many helper expressions as you want to arrive there
        # e.g.
        # p= x**2 # allowed just for conviniece
        # f =p**2.. #required
        - x: 
            key: state_vector
            exprs: "x=Matrix(2,1,[C_il, C_is ])"
        - u: 
            key: scalar_func_phot   
            exprs: "u=2"
        - b: 
            key: part_coeff   
            exprs: "b=Matrix(2,1,[1,1])"
        - A: 
            key: cyc_matrix   
            exprs: "A=diag(-1/2*C_il, -1/3)"
        - f_v: 
            key: state_vector_derivative 
            exprs: "f_v = u*b + A*x"


model_run_data:
    parameter_sets:
         - "Set1":
             desc: "Parameter values as described in Wang and Luo"
             values: {}
         -
             #values: {GPP: 3.370}
    
    initial_values:
        - "IV1": 
            values: {C_il: 250, C_is: 414}
            desc: "Initial values as invented by Markus "
    
    run_times:
        - "RT1":
            start: 0
            end: 200
            step_size: 0.1
    
    possible_combinations:
        - ["Set1","IV1", "RT1"]
     
