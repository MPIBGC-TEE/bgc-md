
## vim:set ff=unix expandtab ts=4 sw=4: 
name: JeDi-DGVM
longName: "The Jena Diversity-Dynamic Global Vegetation Model"
version: 1
entryAuthor: "Verónika Ceballos-Núñez"
entryAuthorOrcid: 0000-0002-0046-1160
modApproach: process based
partitioningScheme: dynamic
claimedDynamicPart: "yes"
spaceScale: global
timeResolution: daily
doi: "10.5194/bg-10-4137-2013"
bibtex: "@article{Pavlick2013Biogeosciences,
         author = {R Pavlick and D T Drewry and K Bohn and B Reu and A Kleidon},
         doi = {10.5194/bg-10-4137-2013},
         journal = {Biogeosciences},
         number = {6},
         pages = {4137-4177},
         title = {The Jena Diversity-Dynamic Global Vegetation Model (JeDi-DGVM): A diverse approach to representing terrestrial biogeography and biogeochemistry based on plant functional trade-offs},
         url = {http://tinyurl.sfx.mpg.de/uahq},
         volume = {10},
         year = {2013}
        }"

abstract: "Terrestrial biosphere models typically abstract the immense diversity of vegetation forms and functioning into a relatively small set of predefined semi-empirical plant functional types (PFTs). There is growing evidence, however, from the field ecology community as well as from modelling studies that current PFT schemes may not adequately represent the observed variations in plant functional traits and their effect on ecosystem functioning. In this paper, we introduce the Jena Diversity-Dynamic Global Vegetation Model (JeDi-DGVM) as a new approach to terrestrial biosphere modelling with a richer representation of functional diversity than traditional modelling approaches based on a small number of fixed PFTs. JeDi-DGVM simulates the performance of a large number of randomly generated plant growth strategies, each defined by a set of 15 trait parameters which characterize various aspects of plant functioning including carbon allocation, ecophysiology and phenology. Each trait parameter is involved in one or more functional trade-offs. These trade-offs ultimately determine whether a strategy is able to survive under the climatic conditions in a given model grid cell and its performance relative to the other strategies. The biogeochemical fluxes and land surface properties of the individual strategies are aggregated to the grid-cell scale using a mass-based weighting scheme. We evaluate the simulated global biogeochemical patterns against a variety of field and satellite-based observations following a protocol established by the Carbon-Land Model Intercomparison Project. The land surface fluxes and vegetation structural properties are reasonably well simulated by JeDi-DGVM, and compare favourably with other state-of-the-art global vegetation models. We also evaluate the simulated patterns of functional diversity and the sensitivity of the JeDi-DGVM modelling approach to the number of sampled strategies. Altogether, the results demonstrate the parsimonious and flexible nature of a functional trade-off approach to global vegetation modelling, i.e. it can provide more types of testable outputs than standard PFT-based approaches and with fewer inputs. The approach implemented here in JeDi-DGVM sets the foundation for future applications that will explore the impacts of explicitly resolving diverse plant communities, allowing for a more flexible temporal and spatial representation of the structure and function of the terrestrial biosphere."
model:
    - state_variables:
        - C_A:
            desc: Carbon in stored assimilates
            unit: "gC*m^{-2}" 
            key: sapwood
        - C_L:
            desc: Carbon in leaves
            unit: "gC*m^{-2}" 
            key: foliage
        - C_R:
            desc: Carbon in fine roots
            unit: "gC*m^{-2}" 
            key: fine_roots
        - C_WL:
            desc: Carbon in aboveground wood (branches and stems)
            unit: "gC*m^{-2}" 
            key: wood
        - C_WR:
            desc: Carbon in belowground wood (coarse roots)
            unit: "gC*m^{-2}" 
            key: wood
        - C_S:
            desc: Carbon in seeds (reproductive tisses)
            unit: "gC*m^{-2}" 
            key:
    - photosynthesis_parameters:
        - t:
            desc: time step
            unit: "day"
            type: variable
            key: time_symbol
        - SLA:
            desc: Specific Leaf Area 
            type: variable
            unit: "m^2*gC^{-1}" 
            key: SLA
            exprs: #Function of leaf turnover rate. See page 23
        - LAI:
            desc: Leaf Area Index
            type: variable
            key: LAI
            unit: "m^2*m^{-2}" 
            exprs: "LAI = C_L*SLA"
        - k:
            desc: Light extinction coefficient
            exprs: "k =  0.5"
        - f_VEG:
            desc: Fractional vegetative cover
            exprs: "f_VEG = 1 - exp(-k*LAI)"
        - GPP:
            desc: Gross Primary Production
            unit: "gC*m^{-2}*d^{-1}" 
            type: variable
            key: GPP
            exprs: #function of LAI, see equations in page 24
        - RES_a:
            desc: Autotrophic respiration
            unit: "gC*m^{-2}*d^{-1}" 
            type: variable
            key: 
        - NPP:
            desc: Net Primary Production
            unit: "gC*m^{-2}*d^{-1}" 
            type: variable
            key: NPP
            exprs: "NPP = GPP - RES_a"
    - trait_parameters:
        - t_1:
            desc: Growth response time to moisture conditions
        - t_2:
            desc: Growth response time to temperature conditions
        - t_3:
            desc: Critical temperature for growth
        - t_4:
            desc: Germination fraction
        - t_5:
            desc: Allocation to reproduction
        - t_6:
            desc: Allocation to aboveground growth
        - t_7:
            desc: Allocation to belowground growth
        - t_8:
            desc: Allocation to storage
        - t_9:
            desc: Relative allocation to aboveground structure
        - t_10:
            desc: Relative allocation to belowground structure
    - additionl_variables:
        - f_GERM:
        - gamma_GERM:
            desc: Germination fraction
            exprs: "gamma_GERM = 10**(4*(t_4**(-4)))"
            unit: "days^{-1}" 
        - k_GERM:
        - p:
        - GERM:
            desc: "Germination of carbon from C_S to C_A. Occurs when germination conditions are favourable (f_GERM = 1) and C_S > 0"
            type: variable 
            exprs: "GERM = f_GERM*gamma_GERM*(C_S/Max(p,k_GERM))" 
        - f_SEED:
        - f_GROW:
            desc: Growing conditions are controlled by environmental conditions, specifically, soil wetness and near-surface air temperature
            exprs: # See A3 in page 22
    - cycling_rates:
        - A_S:
            desc: Allocation fraction to seeds
            type: variable
            exprs: "A_S = f_SEED*(t_5/(t_5+t_6+t_7+t_8))"
        - A_L:
            desc: Allocation fraction to leaves
            type: variable
            exprs: "A_L = f_GROW*(1-t_9)*(t_6/(t_5+t_6+t_7+t_8))"
        - A_R:
            desc: Allocation fraction to fine roots
            type: variable
            exprs: "A_R = f_GROW*(1-t_10)*(t_7/(t_5+t_6+t_7+t_8))"
        - A_WL:
            desc: Allocation fraction to aboveground wood
            type: variable
            exprs: "A_WL = f_GROW*f_VEG*t_9*(t_6/(t_5+t_6+t_7+t_8))"
        - A_WR:
            desc: Allocation fraction to belowground wood
            type: variable
            exprs: "A_WR = f_GROW*f_VEG*t_10*(t_7/(t_5+t_6+t_7+t_8))"
            # sum of A_S:A_WR < 1
        - tau_S: 
            desc: Seeds turnover rate 
            type: parameter 
            key: 
            unit: days 
        - tau_L: 
            desc: Stem turnover rate 
            type: parameter 
            key: "cyc_foliage"
            unit: days 
        - tau_R: 
            desc: Fine roots turnover rate
            type: parameter 
            key: "cyc_roots"
            unit: days 
        - tau_WL: 
            desc: Aboveground wood turnover rate 
            type: parameter 
            key: "cyc_wood"
            unit: days 
        - tau_WR: 
            desc: Belowground wood turnover rate 
            type: parameter 
            key: "cyc_wood"
            unit: days 
    - respiration:
        - C_RES_S:
            desc: Growth respiration coefficient
            unit: "gC*gC^-1"
            type: parameter 
        - C_RES_L:
            desc: Growth respiration coefficient
            unit: "gC*gC^-1"
            type: parameter 
        - C_RES_R:
            desc: Growth respiration coefficient
            unit: "gC*gC^-1"
            type: parameter 
        - C_RES_WL:
            desc: Growth respiration coefficient
            unit: "gC*gC^-1"
            type: parameter 
        - C_RES_WR:
            desc: Growth respiration coefficient
            unit: "gC*gC^-1"
            type: parameter 

    - components:
        - x: 
            key: state_vector 
            exprs: "x=Matrix(6,1,[C_A, C_S, C_L, C_R, C_WL, C_WR])"
            desc: vector of states for vegetation
        - u:
            desc: scalar function of photosynthetic inputs
            exprs: "u = NPP" 
            key: scalar_func_phot   
        - b: 
            key: part_coeff    
            exprs: "b=Matrix(6,1,[1,0,0,0,0,0])"
            desc: vector of partitioning coefficients of photosynthetically fixed carbon
        - A:
            key: cyc_matrix    
            exprs: "A = Matrix([[-((A_S*(1-C_RES_S))+(A_L*(1-C_RES_L))+(A_R*(1-C_RES_R))+(A_WL*(1-C_RES_WL))+(A_WR*(1-C_RES_WR))),f_GERM*gamma_GERM*(1/Max(p,k_GERM)),0,0,0,0]
                               ,[(A_S*(1-C_RES_S)),-(f_GERM*gamma_GERM*(1/Max(p,k_GERM)))-(1/tau_S),0,0,0,0]
                               ,[(A_L*(1-C_RES_L)),0,-(1/tau_L),0,0,0]
                               ,[(A_R*(1-C_RES_R)),0,0,-(1/tau_R),0,0]
                               ,[(A_WL*(1-C_RES_WL)),0,0,0,-(1/tau_WL),0]
                               ,[(A_WR*(1-C_RES_WR)),0,0,0,0,-1/tau_WR]])"
            desc: matrix of cycling rates 
        - f_v:
            desc: the righthandside of the ode
            exprs: "f_v = u*b + A*x"
            key: state_vector_derivative
            
