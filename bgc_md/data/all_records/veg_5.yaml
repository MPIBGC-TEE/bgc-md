# Extensions to veg_4.yaml 
# 1.) Add more parameter to the exprs in components
#     a) add the parameters
#     b) add values for them in the parameter sets
#     c) r
# 2.) Add some (fake) bibliographic information
name: IBIS
longName: Integrated Biosphere Simulator
version: 2.6
entryAuthor: "Verónika Ceballos-Núñez"
entryAuthorOrcid: 0000-0002-0046-1160
entryCreationDate: 22/3/2016 # changeset 3354
lastModification: 21/5/2018
modApproach: process based
partitioningScheme: dynamic #fixed
claimedDynamicPart: "no"
spaceScale: Amazon region 
#    unit: "1°*1°"
timeResolution: monthly 
doi: 10.5194/bg-10-2255-2013
reviews: 
      - reviewer: Carlos Sierra
        orcid: 0000-0003-0009-4169
        date: 12/04/2016
        desc: "Changed the allocation coefficients for functions that depend on percentage sand. Checked equations against the original paper"
        type: deep
# Model uses an integrated framework based on land suface biophysics (canopy and soil physics, plant physiology), vegetation phenology, vegetation dynamics and competition, terrestrial carbon and nutrient cycling
model:
    - state_variables:
        - C_il:
            desc: Carbon in leaves of plant functional type (PFT) $i$
            key: "foliage"
        - C_is: 
            desc: "Carbon in transport tissue (mainly stems) of PFT$_i$"
            key: "wood" # consider changing this key to "vascular_tissue" and add to vegetation subcategories
        - C_ir:
            desc: Carbon in fine roots of PFT$_i$
            key: "fine_roots"

    - additional_variables:
        - t:
            desc: time
            unit: "day"
            type: variable
            key: time_symbol

    - photosynthetic_parameters:
        - NPP_i:
            desc: Net Primary Production for PFT$_i$
            type: variable
            key: NPP

    - components:
        # you are required to provide at least expressions for f u x and A
        # you are allowed to use as many helper expressions as you want to arrive there
        # e.g.
        # p= x**2 # allowed just for conviniece
        # f =p**2.. #required
        - x: 
            key: state_vector
            exprs: "x=Matrix(3,1,[C_il, C_is, C_ir ])"
        - u: 
            key: scalar_func_phot   
            exprs: "u=NPP_i"
        - b: 
            key: part_coeff   
            exprs: "b=Matrix(3,1,[1/4*(1-sin(2*pi*t)),1/4*(1+sin(2*pi*t)),1/2])"
        - A: 
            key: cyc_matrix   
            exprs: "A=Matrix([[-1/4*C_il,0,0],[1/8*C_il, -1/2*(2+sin(2*pi/5*t)),0],[0,1/4,1/8]])"
        - f_v: 
            key: state_vector_derivative 
            exprs: "f_v = u*b + A*x"


model_run_data:

    parameter_sets:
        - "Set1":
            values: {NPP_i: 2}
            desc: "Parameter values as described in (fake) Publication"

    initial_values:
        - "IV1": 
            values: {C_il: 250, C_is: 414, C_ir: 324}
            desc: "Initial values as invented by Markus "
    
    run_times:
        - "RT1":
            start: 0
            end: 20
            step_size: 0.01
    
    possible_combinations:
        - ["Set1", "IV1", "RT1"]
     
